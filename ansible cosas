Ansible is a powerful tool for IT automation and can be used in a CI/CD process to provision the target environment and to then deploy the application on it.

Jenkins is a well-known tool for implementing CI/CD. Shell scripts are commonly used for provisioning environments or to deploy apps during the pipeline flow. Although this could work, it is cumbersome to maintain and reuse scripts in the long run.

Hacer ejemplos de ansible en la mac

https://www.redhat.com/en/blog/integrating-ansible-jenkins-cicd-process
https://serversforhackers.com/c/an-ansible2-tutorial

Ansible has you create an inventory file used to define which servers it will be managing. This file can be named anything, but we'll typically name it hosts.

Ansible uses "modules" to accomplish most of its Tasks. Modules can do things like install software, copy files, use templates and much more.

Modules are the way to use Ansible, as they can use available context ("Facts") in order to determine what actions, if any need to be done to accomplish a Task.

Playbooks can run multiple Tasks.

A Handler is exactly the same as a Task (it can do anything a Task can), but it will only run when called by another Task. This is useful for "secondary" actions that might be required after running a Task, such as starting a new service after installation or reloading a service after a configuration change.

You can register the results of a modules action as well, and use the variable defined in register to conditionally perform actions when based on the registered variables values. 

Roles are good for organizing multiple, related Tasks and encapsulating data needed to accomplish those Tasks. Real-world configuration often requires extra data such as variables, files, dynamic templates and more. These tools can be used with Playbooks, but we can do better immediately by organizing related Tasks and data into one coherent structure: a Role.